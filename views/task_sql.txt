
1. SELECT DISTINCT status FROM tasks ORDER BY status
2. SELECT COUNT(t.id) FROM tasks t INNER JOIN projects p ON p.id = t.project_id GROUP BY p.id ORDER BY COUNT(t.id) DESC
3. SELECT COUNT(t.id) FROM tasks t INNER JOIN projects p ON p.id = t.project_id GROUP BY p.id ORDER BY p.name
4. SELECT * FROM tasks WHERE name LIKE 'N%'
5. SELECT p.*, COUNT(t.id) FROM projects p LEFT JOIN tasks t ON p.id = t.project_id  WHERE p.name LIKE '%a%' GROUP BY p.id
6. SELECT DISTINCT t1.* FROM tasks t1 INNER JOIN tasks t2 ON t1.name = t2.name WHERE t1.id <> t2.id ORDER BY t1.name
7. SELECT t1.* FROM projects p INNER JOIN tasks t1 ON p.id = t1.project_id INNER JOIN tasks t2 ON p.id = t2.project_id WHERE p.name = 'Garage' AND t1.status = t2.status AND t1.name = t2.name AND t1.id <> t2.id GROUP BY t2.id ORDER BY COUNT(t2.id) DESC
8. SELECT p.name, COUNT(t.id) FROM projects p INNER JOIN tasks t ON p.id = t.project_id WHERE t.status = 'completed' GROUP BY p.id HAVING COUNT(t.id) > 10 ORDER BY p.id


Given tables:
★ tasks (id, name, status, project_id)
★ projects (id, name)

Write the queries for:
1. get all statuses, not repeating, alphabetically ordered
2. get the count of all tasks in each project, order by tasks count descending
3. get the count of all tasks in each project, order by projects names
4. get the tasks for all projects having the name beginning with “N” letter
5. get the list of all projects containing the ‘a’ letter in the middle of the name, and
show the tasks count near each project. Mention that there can exist projects without
tasks and tasks with project_id=NULL
6. get the list of tasks with duplicate names. Order alphabetically
7. get the list of tasks having several exact matches of both name and status, from
the project ‘Garage’. Order by matches count
8. get the list of project names having more than 10 tasks in status ‘completed’. Order
by project_id